version: "3.8"

services:
  db:
    image: postgres:15
    container_name: db_app
    env_file:
      - .env

  work_app:
    build:
      context: .
    env_file:
      - .env
    container_name: work_app
    command:
      - /project_dir/docker_instructions/app.sh
      - bash -c "alembic revision --autogenerate -m "upgrade_new" && alembic upgrade head"
    ports:
      - 1111:8000
    environment:
      DB_HOST: db
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  zookeeper:
      image: wurstmeister/zookeeper:latest
      container_name: zookeeper
      ports:
        - "2181:2181"

  kafka:
      container_name: kafka
      image: wurstmeister/kafka:latest
      ports:
        - "9092:9092"
      environment:
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_CREATE_TOPICS: "test_topic:1:1"
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      depends_on:
        - zookeeper

  kafka_consumer:
    build:
      context: .
    container_name: kafka_consumer
    depends_on:
      - kafka
      - zookeeper
      - work_app
    command: python -m src.kafka_consumers.test_topic
    volumes:
      - .:/project_dir
    env_file:
      - .env
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      TOPIC: test_topic
      DB_HOST: db


